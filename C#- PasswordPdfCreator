<%@ Page Language="C#" AutoEventWireup="true" CodeBehind="WebForm1.aspx.cs" Inherits="PasswordProtectedPDF.WebForm1" %>

<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
    <title></title>
</head>
<body>
    <form id="form1" runat="server">
        <div>
            <asp:GridView ID="GridView1" HeaderStyle-BackColor="#3AC0F2" HeaderStyle-ForeColor="White"
                RowStyle-BackColor="#A1DCF2" AlternatingRowStyle-BackColor="White" AlternatingRowStyle-ForeColor="#000"
                runat="server" AutoGenerateColumns="false">
                <Columns>
                    <asp:BoundField DataField="ContactName" HeaderText="Contact Name" ItemStyle-Width="150px" />
                    <asp:BoundField DataField="City" HeaderText="City" ItemStyle-Width="100px" />
                    <asp:BoundField DataField="Country" HeaderText="Country" ItemStyle-Width="100px" />
                </Columns>
            </asp:GridView>
            <br />
            <asp:Button ID="btnExport" runat="server" Text="Export To PDF" OnClick="btnExport_Click" />
        </div>
    </form>
</body>
</html>


==================================================================================================================================
using iTextSharp.text;
using iTextSharp.text.html.simpleparser;
using iTextSharp.text.pdf;
using System.Data;
using System.Data.SqlClient;
using System.IO;


  private void BindGrid()
        {
            List<Customer> ilist = new List<Customer>();

            Customer cust = new Customer();

            for (int i = 0; i < 10; i++)
            {
                cust.City = "Indore";
                cust.ContactName = "Pramit";
                cust.Country = "India";

                ilist.Add(cust);

                cust = new Customer();
                cust.City = "Ujjain";
                cust.ContactName = "Amit";
                cust.Country = "America";
                ilist.Add(cust);
            }

            GridView1.DataSource = ilist;
            GridView1.DataBind();
        }
protected void btnExport_Click(object sender, EventArgs e)
        {
            try
            {
                using (StringWriter sw = new StringWriter())
                {
                    using (HtmlTextWriter hw = new HtmlTextWriter(sw))
                    {
                        //To Export all pages
                        GridView1.AllowPaging = false;
                        this.BindGrid();

                        GridView1.RenderControl(hw);
                        StringReader sr = new StringReader(sw.ToString());
                        Document pdfDoc = new Document(PageSize.A4, 10f, 10f, 10f, 0f);
                        HTMLWorker htmlparser = new HTMLWorker(pdfDoc);
                        using (MemoryStream memoryStream = new MemoryStream())
                        {
                            PdfWriter.GetInstance(pdfDoc, memoryStream);
                            pdfDoc.Open();
                            htmlparser.Parse(sr);
                            pdfDoc.Close();
                            byte[] bytes = memoryStream.ToArray();
                            memoryStream.Close();
                            using (MemoryStream input = new MemoryStream(bytes))
                            {
                                using (MemoryStream output = new MemoryStream())
                                {
                                    string password = "pass@123";
                                    PdfReader reader = new PdfReader(input);
                                    PdfEncryptor.Encrypt(reader, output, true, password, password, PdfWriter.ALLOW_SCREENREADERS);
                                    bytes = output.ToArray();
                                    Response.ContentType = "application/pdf";
                                    Response.AddHeader("content-disposition", "attachment;filename=GridViewExport.pdf");
                                    Response.Cache.SetCacheability(HttpCacheability.NoCache);
                                    Response.BinaryWrite(bytes);
                                    Response.End();
                                }
                            }
                        }
                    }
                }
            }
            catch (Exception ex)
            {
                throw;
            }
        }
        
        public override void VerifyRenderingInServerForm(Control control)
        {
            /* Verifies that the control is rendered */
        }
        
         public class Customer
    {
        public string ContactName { get; set; }
        public string City { get; set; }
        public string Country { get; set; }
    }
